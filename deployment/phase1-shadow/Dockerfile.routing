# Production Dockerfile for Message Routing Engine
# Optimized for performance and security

FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r routing && useradd -r -g routing routing

# Set working directory
WORKDIR /app

# Copy requirements and install dependencies
COPY pyproject.toml setup.py ./
COPY src/ ./src/

# Install Python dependencies
RUN pip install --no-cache-dir -e . && \
    pip install --no-cache-dir prometheus_client gunicorn uvicorn fastapi

# Production stage
FROM base as production

# Copy application code
COPY --chown=routing:routing . /app

# Create necessary directories
RUN mkdir -p /app/logs /app/metrics /app/health && \
    chown -R routing:routing /app

# Switch to non-root user
USER routing

# Health check
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health/routing || exit 1

# Expose application port
EXPOSE 8080

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src \
    PORT=8080 \
    WORKERS=2 \
    ROUTING_ENGINE_MODE=shadow \
    LOG_LEVEL=info

# Start the application
CMD ["python", "-m", "uvicorn", "routing_server:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "2"]